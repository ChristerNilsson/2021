// Generated by CoffeeScript 2.5.1
var ANCHORS, Button, absx, ass, buttons, colInput, didj, draw, even, iCol, iRow, makeANCHORS, makeInput, manhattan, mousePressed, n, nInput, nr, odd, rowInput, setup, updateCol, updateRow, x, y;

ass = function(a, b) {
  if (chai.assert.deepEqual(a, b)) {
    return console.log(a, b);
  }
};

//range = _.range
n = null;

ANCHORS = null;

nInput = null;

colInput = null;

rowInput = null;

buttons = [];

iRow = 0n;

iCol = 0n;

Button = class Button {
  constructor(prompt, x1, y1, click) {
    this.prompt = prompt;
    this.x = x1;
    this.y = y1;
    this.click = click;
    this.w = 40;
    this.h = 40;
  }

  draw() {
    rect(this.x - this.w / 2, this.y - this.h / 2, this.w, this.h);
    return text(this.prompt, this.x, this.y);
  }

  inside(x, y) {
    return (this.x - this.w / 2 < x && x < this.x + this.w / 2) && (this.y - this.h / 2 < y && y < this.y + this.h / 2);
  }

};

makeANCHORS = function(n0) {
  n = n0;
  return ANCHORS = [[[n / 2n, 0n], [0n, n]], [[0n, n / 2n], [n, 0n]], [[n - 1n, n / 2n], [-n, 0n]], [[n / 2n, n - 1n], [0n, -n]]];
};

absx = function(x) {
  if (x < 0n) {
    return -x;
  } else {
    return x;
  }
};

nr = function(i, j) {
  if ((i + j) % 2n === 0n) {
    return even(i, j);
  } else {
    return odd(i, j);
  }
};

even = function(i, j) {
  return x(i, j) / 2n + 1n + n * (y(i, j) / 2n);
};

odd = function(i, j) {
  var di, dj;
  [di, dj] = didj(i, j)[1];
  return even(i + di, j + dj);
};

x = function(i, j) {
  return i - j + n - 1n;
};

y = function(i, j) {
  return 2n * n - 2n - i - j;
};

manhattan = function(a, b, c, d) {
  return absx(a - c) + absx(b - d);
};

didj = function(i, j) {
  return _.minBy(ANCHORS, function([[a, b], [c, d]]) {
    return manhattan(a, b, i, j);
  });
};

// rowsum = (j) -> 
// 	arr = (nr i,j for i in range n)
// 	arr.reduce (a,b) -> a+b
makeInput = function(x, y, value) {
  var res;
  res = createInput(value);
  res.style('font-size', '30px'); //, 'color', '#ff0000'
  res.position(x, y);
  res.size(width - 12);
  return res;
};

updateRow = function(delta) {
  iRow += delta;
  if (iRow < 0) {
    iRow = 0n;
  }
  if (iRow >= n) {
    iRow = n - 1n;
  }
  return rowInput.value(iRow);
};

updateCol = function(delta) {
  iCol += delta;
  if (iCol < 0) {
    iCol = 0n;
  }
  if (iCol >= n) {
    iCol = n - 1n;
  }
  return colInput.value(iCol);
};

setup = function() {
  createCanvas(windowWidth - 20, windowHeight - 20);
  textSize(30);
  textAlign(CENTER, CENTER);
  nInput = makeInput(10, 10, 5);
  colInput = makeInput(10, 50, 0);
  rowInput = makeInput(10, 90, 0);
  buttons.push(new Button('U', width / 2, 150, function() {
    return updateRow(-1n);
  }));
  buttons.push(new Button('D', width / 2, 250, function() {
    return updateRow(1n);
  }));
  buttons.push(new Button('L', 30, 150, function() {
    return updateCol(-1n);
  }));
  return buttons.push(new Button('R', width - 30, 150, function() {
    return updateCol(1n);
  }));
};

draw = function() {
  var button, k, len, results;
  background(128);
  if (nInput.value() === "") {
    makeANCHORS(3n);
  } else {
    makeANCHORS(BigInt(nInput.value()));
  }
  text(nr(iCol, iRow), width / 2, 200);
  text("cells:", width * 0.50, height - 120);
  text(`${n * n}`, width * 0.50, height - 85);
  text("row sum:", width * 0.50, height - 50);
  text(`${n * (1n + n * n / 2n)}`, width * 0.50, height - 15);
  results = [];
  for (k = 0, len = buttons.length; k < len; k++) {
    button = buttons[k];
    results.push(button.draw());
  }
  return results;
};

mousePressed = function() {
  var button, k, len, results;
  results = [];
  for (k = 0, len = buttons.length; k < len; k++) {
    button = buttons[k];
    if (button.inside(mouseX, mouseY)) {
      results.push(button.click());
    } else {
      results.push(void 0);
    }
  }
  return results;
};

//### Tests ####

//start = new Date()

// ass [1,0], _.minBy [[1,0],[0,1]], ([a,b]) -> b
// ass 3, 7//2
// ass 5, manhattan 3,5,1,2

// makeANCHORS 5
// ass 23n, nr 0n,0n
// ass 6, nr 1,0
// ass 10, nr 0,1
// ass 25, nr 2,3
// ass 16, nr 4,3
// ass n*(1+n*n//2), rowsum 0
// ass n*(1+n*n//2), rowsum 1
// ass n*(1+n*n//2), rowsum 2
// ass n*(1+n*n//2), rowsum 3
// ass n*(1+n*n//2), rowsum 4

// makeANCHORS 7
// ass 5, x 2,3
// ass 7, y 2,3
// ass 22, even 0,6
// ass 15, even 1,7
// ass 46, nr 0,0
// ass 15, nr 1,0
// ass 21, nr 0,1
// ass 7, nr 2,3
// ass 4, nr 6,6
// ass 48, nr 2,5
// ass 43, nr 4,3
// ass n*(1+n*n//2), rowsum 0
// ass n*(1+n*n//2), rowsum 1
// ass n*(1+n*n//2), rowsum 2
// ass n*(1+n*n//2), rowsum 3
// ass n*(1+n*n//2), rowsum 4
// ass n*(1+n*n//2), rowsum 5
// ass n*(1+n*n//2), rowsum 6

// makeANCHORS 9
// ass 77, nr 0,0
// ass 28, nr 1,0
// ass 36, nr 0,1
// ass 18, nr 2,3
// ass 23, nr 6,6
// ass 8, nr 2,5
// ass 1, nr 4,3
// ass 369,n*(1+n*n//2)
// ass n*(1+n*n//2), rowsum 0
// ass n*(1+n*n//2), rowsum 1
// ass n*(1+n*n//2), rowsum 2
// ass n*(1+n*n//2), rowsum 3
// ass n*(1+n*n//2), rowsum 4
// ass n*(1+n*n//2), rowsum 5
// ass n*(1+n*n//2), rowsum 6

// makeANCHORS 101
// ass 10151, nr 0,0
// ass 4950, nr 1,0
// ass 5050, nr 0,1
// ass 4848, nr 2,3
// ass 9545, nr 6,6
// ass 4746, nr 2,5
// ass 4647, nr 4,3

// makeANCHORS 1001
// ass 1001501, nr 0,0
// ass 499500, nr 1,0
// ass 500500, nr 0,1
// ass 498498, nr 2,3
// ass 995495, nr 6,6
// ass 497496, nr 2,5
// ass 496497, nr 4,3
// ass 501502001,n*(1+n*n//2)
// ass n*(1+n*n//2), rowsum 0
// ass n*(1+n*n//2), rowsum 1
// ass n*(1+n*n//2), rowsum 2
// ass n*(1+n*n//2), rowsum 3
// ass n*(1+n*n//2), rowsum 4
// ass n*(1+n*n//2), rowsum 5
// ass n*(1+n*n//2), rowsum 6

// makeANCHORS 10001
// ass 100015001, nr 0,0
// ass 49995000, nr 1,0
// ass 50005000, nr 0,1
// ass 49984998, nr 2,3
// ass 99954995, nr 6,6
// ass 49974996, nr 2,5
// ass 49964997, nr 4,3
// ass 500150020001,n*(1+n*n//2) # row sum
// ass n*(1+n*n//2), rowsum 0
// ass n*(1+n*n//2), rowsum 1
// ass n*(1+n*n//2), rowsum 2
// ass n*(1+n*n//2), rowsum 3
// ass n*(1+n*n//2), rowsum 4
// ass n*(1+n*n//2), rowsum 5
// ass n*(1+n*n//2), rowsum 6

// makeANCHORS 100001
// ass 10000200001,n*n # cell count
// ass 10000150001, nr 0,0 # cell
// ass 4999950000, nr 1,0
// ass 5000050000, nr 0,1
// ass 4999849998, nr 2,3
// ass 9999549995, nr 6,6
// ass 4999749996, nr 2,5
// ass 4999649997, nr 4,3
// ass 500015000200001,n*(1+n*n//2) # row sum, col sum, diag sum
// ass n*(1+n*n//2), rowsum 0 # row sum
// ass n*(1+n*n//2), rowsum 1
// ass n*(1+n*n//2), rowsum 2
// ass n*(1+n*n//2), rowsum 3
// ass n*(1+n*n//2), rowsum 4
// ass n*(1+n*n//2), rowsum 5
// ass n*(1+n*n//2), rowsum 6

//console.log new Date() - start

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2021\025-MagicSquaresBigInt\coffee\sketch.coffee