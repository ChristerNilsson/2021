// Generated by CoffeeScript 2.4.1
var add, ass, button, center, click, convert, crosshair, drawMap, images, mouse, mousedown, mousemove, mouseup, offset, position, range, startup, svg, svgurl;

range = _.range;

svgurl = "http://www.w3.org/2000/svg";

svg = document.getElementById('svgOne');

//position = [59.26519880996387, 18.132755831664422] # lat,lng y,x Home
position = [
  59.26698746068617,
  18.128352823008175 // Skarpnäcks Torg
];

//position = [59.2631917949656, 18.12265887424414] # Elhuset
center = []; // sweref för skärmens mittpunkt. Påverkas av pan

offset = [32, 320];

mouse = [];

images = [];

ass = function(a, b, msg = '') {
  return chai.assert.deepEqual(a, b, msg);
};

button = function(x, y, prompt, event) {
  var text;
  text = add('text', svg, {
    x: x + 25,
    y: y + 30,
    stroke: 'black',
    'stroke-width': 1,
    'text-anchor': 'middle'
  });
  text.textContent = prompt;
  text.style.fontSize = '25px';
  return add('circle', svg, {
    cx: x + 25,
    cy: y + 25,
    r: 25,
    fill: '#f000',
    stroke: 'black',
    'stroke-width': 1,
    onclick: event
  });
};

crosshair = function(x, y) {
  add('circle', svg, {
    cx: x,
    cy: y,
    r: 25,
    fill: '#f000',
    stroke: 'black',
    'stroke-width': 1
  });
  add('line', svg, {
    x1: x - 25,
    y1: y,
    x2: x + 25,
    y2: y,
    stroke: 'black',
    'stroke-width': 1
  });
  return add('line', svg, {
    x1: x,
    y1: y - 25,
    x2: x,
    y2: y + 25,
    stroke: 'black',
    'stroke-width': 1
  });
};

add = function(type, parent, attrs) {
  var key, obj;
  obj = document.createElementNS(svgurl, type);
  parent.appendChild(obj);
  for (key in attrs) {
    obj.setAttributeNS(null, key, attrs[key]);
  }
  return obj;
};

click = function(s) {
  return console.log(s);
};

mousedown = function(evt) {
  return mouse = [evt.x, evt.y];
};

mousemove = function(evt) {
  if (mouse.length === 0) {
    return;
  }
  center[0] += evt.movementX;
  center[1] += evt.movementY;
  //console.log origin
  return drawMap();
};

mouseup = function(evt) {
  return mouse = [];
};

convert = function([x, y]) {
  var dx, dy;
  x -= 32;
  y -= 320;
  dx = x % 512;
  dy = y % 512;
  x += 32 - dx;
  y += 320 - dy;
  return [x, y, 128 - Math.floor(dy / 2), Math.floor(dx / 2) - 128];
};

//ass [6573600,678208,90,174], convert [6573780,678556]
//ass [6572064,676672,50,0], convert [6572064-32+100,676672-320]
drawMap = function() {
  var href, i, image, j, k, len, ref, results, x, y;
  ref = range(3);
  // for i in range svg.childNodes.length-1,-1,-1
  // 	svg.childNodes[i].remove()
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results.push((function() {
      var l, len1, ref1, results1;
      ref1 = range(3);
      results1 = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        x = 256 * i; //+origin[0]
        y = 256 * j; //+origin[1]
        href = `maps\\${center[0] + (i - 1) * 512}-${center[1] - (j - 1) * 512}.jpg`;
        //console.log href
        image = images[i][j];
        image.setAttributeNS(null, 'x', x);
        image.setAttributeNS(null, 'y', y);
        image.setAttributeNS(null, 'href', href);
        //add 'image',svg, {x:256*i+origin[0], y:256*j+origin[1], href:href}
        results1.push(add('rect', svg, {
          x: 256 * i + origin[0],
          y: 256 * j + origin[1],
          width: 256,
          height: 256,
          stroke: 'black',
          'stroke-width': 2,
          fill: 'none'
        }));
      }
      return results1;
    })());
  }
  return results;
};

startup = function() {
  var H, W, baseX, baseY, dx, dy, g, grid, href, i, j, k, l, len, len1, ref, ref1, row, x, y;
  W = 768;
  H = 768;
  add('rect', svg, {
    x: 0,
    y: 0,
    width: W,
    height: H,
    stroke: 'black',
    'stroke-width': 2,
    fill: 'green'
  });
  grid = geodetic_to_grid(position[0], position[1]);
  center = (function() {
    var k, len, results;
    results = [];
    for (k = 0, len = grid.length; k < len; k++) {
      g = grid[k];
      results.push(Math.round(g));
    }
    return results;
  })();
  [baseX, baseY, dx, dy] = convert(center);
  images = [];
  ref = range(3);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    row = [];
    x = baseX + (1 - i) * 512;
    ref1 = range(3);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      y = baseY + (j - 1) * 512;
      href = `maps\\${y}-${x
      // TURN!
}.jpg`;
      console.log(href);
      row.push(add('image', svg, {
        x: 256 * j + dx,
        y: 256 * i + dy,
        href: href
      }));
      add('rect', svg, {
        x: 256 * j + dx,
        y: 256 * i + dy,
        width: 256,
        height: 256,
        stroke: 'black',
        'stroke-width': 1,
        fill: 'none'
      });
    }
    images.push(row);
  }
  button(10, 10, 'in', "click('in!')");
  button(W - 60, 10, 'out', "click('out!')");
  button(10, H - 60, 'ctr', "click('ctr!')");
  button(W - 60, H - 60, 'aim', "click('aim!')");
  return crosshair(768 / 2, 768 / 2);
};

//	x,y = grid_to_geodetic center[0],center[1]
//drawMap()
startup();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxNQUFBLEVBQUEsTUFBQSxFQUFBLEtBQUEsRUFBQSxPQUFBLEVBQUEsU0FBQSxFQUFBLE9BQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLFNBQUEsRUFBQSxTQUFBLEVBQUEsT0FBQSxFQUFBLE1BQUEsRUFBQSxRQUFBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxHQUFBLEVBQUE7O0FBQUEsS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFDVixNQUFBLEdBQVM7O0FBQ1QsR0FBQSxHQUFNLFFBQVEsQ0FBQyxjQUFULENBQXdCLFFBQXhCLEVBRk47OztBQUtBLFFBQUEsR0FBVztFQUFDLGlCQUFEO0VBQW9CLGtCQUFwQjtFQUxYOzs7QUFPQSxNQUFBLEdBQVMsR0FQVDs7QUFRQSxNQUFBLEdBQVMsQ0FBQyxFQUFELEVBQUksR0FBSjs7QUFDVCxLQUFBLEdBQVE7O0FBQ1IsTUFBQSxHQUFTOztBQUVULEdBQUEsR0FBTSxRQUFBLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxNQUFJLEVBQVgsQ0FBQTtTQUFrQixJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVosQ0FBc0IsQ0FBdEIsRUFBeUIsQ0FBekIsRUFBNEIsR0FBNUI7QUFBbEI7O0FBRU4sTUFBQSxHQUFTLFFBQUEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLE1BQUwsRUFBWSxLQUFaLENBQUE7QUFDUixNQUFBO0VBQUEsSUFBQSxHQUFPLEdBQUEsQ0FBSSxNQUFKLEVBQVcsR0FBWCxFQUFnQjtJQUFDLENBQUEsRUFBRSxDQUFBLEdBQUUsRUFBTDtJQUFTLENBQUEsRUFBRSxDQUFBLEdBQUUsRUFBYjtJQUFpQixNQUFBLEVBQU8sT0FBeEI7SUFBaUMsY0FBQSxFQUFlLENBQWhEO0lBQW1ELGFBQUEsRUFB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O1NBQ0EsU0FBQSxDQUFVLEdBQUEsR0FBSSxDQUFkLEVBQWdCLEdBQUEsR0FBSSxDQUFwQjtBQXpCUyxFQXRFVjs7OztBQW9HQSxPQUFBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJyYW5nZSA9IF8ucmFuZ2Vcclxuc3ZndXJsID0gXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHJcbnN2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkICdzdmdPbmUnXHJcblxyXG4jcG9zaXRpb24gPSBbNTkuMjY1MTk4ODA5OTYzODcsIDE4LjEzMjc1NTgzMTY2NDQyMl0gIyBsYXQsbG5nIHkseCBIb21lXHJcbnBvc2l0aW9uID0gWzU5LjI2Njk4NzQ2MDY4NjE3LCAxOC4xMjgzNTI4MjMwMDgxNzVdICMgU2thcnBuw6Rja3MgVG9yZ1xyXG4jcG9zaXRpb24gPSBbNTkuMjYzMTkxNzk0OTY1NiwgMTguMTIyNjU4ODc0MjQ0MTRdICMgRWxodXNldFxyXG5jZW50ZXIgPSBbXSAjIHN3ZXJlZiBmw7ZyIHNrw6RybWVucyBtaXR0cHVua3QuIFDDpXZlcmthcyBhdiBwYW5cclxub2Zmc2V0ID0gWzMyLDMyMF0gXHJcbm1vdXNlID0gW11cclxuaW1hZ2VzID0gW11cclxuXHJcbmFzcyA9IChhLCBiLCBtc2c9JycpIC0+IGNoYWkuYXNzZXJ0LmRlZXBFcXVhbCBhLCBiLCBtc2dcclxuXHJcbmJ1dHRvbiA9ICh4LHkscHJvbXB0LGV2ZW50KSAtPlxyXG5cdHRleHQgPSBhZGQgJ3RleHQnLHN2Zywge3g6eCsyNSwgeTp5KzMwLCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MSwgJ3RleHQtYW5jaG9yJzonbWlkZGxlJ31cclxuXHR0ZXh0LnRleHRDb250ZW50ID0gcHJvbXB0XHJcblx0dGV4dC5zdHlsZS5mb250U2l6ZSA9ICcyNXB4J1xyXG5cdGFkZCAnY2lyY2xlJyxzdmcsIHtjeDp4KzI1LCBjeTp5KzI1LCByOjI1LCBmaWxsOicjZjAwMCcsIHN0cm9rZTonYmxhY2snLCAnc3Ryb2tlLXdpZHRoJzoxLCBvbmNsaWNrOmV2ZW50fVxyXG5cclxuY3Jvc3NoYWlyID0gKHgseSkgLT5cclxuXHRhZGQgJ2NpcmNsZScsc3ZnLCB7Y3g6eCwgY3k6eSwgcjoyNSwgZmlsbDonI2YwMDAnLCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MX1cclxuXHRhZGQgJ2xpbmUnLHN2Zywge3gxOngtMjUsIHkxOnksIHgyOngrMjUsIHkyOnksIHN0cm9rZTonYmxhY2snLCAnc3Ryb2tlLXdpZHRoJzoxfVxyXG5cdGFkZCAnbGluZScsc3ZnLCB7eDE6eCwgeTE6eS0yNSwgeDI6eCwgeTI6eSsyNSwgc3Ryb2tlOidibGFjaycsICdzdHJva2Utd2lkdGgnOjF9XHJcblxyXG5hZGQgPSAodHlwZSxwYXJlbnQsYXR0cnMpIC0+XHJcblx0b2JqID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TIHN2Z3VybCwgdHlwZVxyXG5cdHBhcmVudC5hcHBlbmRDaGlsZCBvYmpcclxuXHRmb3Iga2V5IG9mIGF0dHJzXHJcblx0XHRvYmouc2V0QXR0cmlidXRlTlMgbnVsbCwga2V5LCBhdHRyc1trZXldXHJcblx0b2JqXHJcblxyXG5cclxuY2xpY2sgID0gKHMpIC0+IGNvbnNvbGUubG9nIHNcclxubW91c2Vkb3duID0gKGV2dCkgLT4gbW91c2UgPSBbZXZ0LngsZXZ0LnldXHJcbm1vdXNlbW92ZSA9IChldnQpIC0+IFxyXG5cdGlmIG1vdXNlLmxlbmd0aCA9PSAwIHRoZW4gcmV0dXJuXHJcblx0Y2VudGVyWzBdICs9IGV2dC5tb3ZlbWVudFhcclxuXHRjZW50ZXJbMV0gKz0gZXZ0Lm1vdmVtZW50WVxyXG5cdCNjb25zb2xlLmxvZyBvcmlnaW5cclxuXHRkcmF3TWFwKClcclxubW91c2V1cCA9IChldnQpIC0+IG1vdXNlID0gW11cclxuXHJcbmNvbnZlcnQgPSAoW3gseV0pIC0+XHJcblx0eCAtPSAzMlxyXG5cdHkgLT0gMzIwXHJcblx0ZHggPSB4ICUgNTEyXHJcblx0ZHkgPSB5ICUgNTEyXHJcblx0eCArPSAzMiAtIGR4XHJcblx0eSArPSAzMjAgLSBkeVxyXG5cdFt4LCB5LCAxMjgtZHkvLzIsIGR4Ly8yLTEyOF1cclxuI2FzcyBbNjU3MzYwMCw2NzgyMDgsOTAsMTc0XSwgY29udmVydCBbNjU3Mzc4MCw2Nzg1NTZdXHJcbiNhc3MgWzY1NzIwNjQsNjc2NjcyLDUwLDBdLCBjb252ZXJ0IFs2NTcyMDY0LTMyKzEwMCw2NzY2NzItMzIwXVxyXG5cclxuZHJhd01hcCA9IC0+XHJcblx0IyBmb3IgaSBpbiByYW5nZSBzdmcuY2hpbGROb2Rlcy5sZW5ndGgtMSwtMSwtMVxyXG5cdCMgXHRzdmcuY2hpbGROb2Rlc1tpXS5yZW1vdmUoKVxyXG5cdGZvciBpIGluIHJhbmdlIDNcclxuXHRcdGZvciBqIGluIHJhbmdlIDNcclxuXHRcdFx0eCA9IDI1NippICMrb3JpZ2luWzBdXHJcblx0XHRcdHkgPSAyNTYqaiAjK29yaWdpblsxXVxyXG5cdFx0XHRocmVmID0gXCJtYXBzXFxcXCN7Y2VudGVyWzBdKyhpLTEpKjUxMn0tI3tjZW50ZXJbMV0tKGotMSkqNTEyfS5qcGdcIlxyXG5cdFx0XHQjY29uc29sZS5sb2cgaHJlZlxyXG5cdFx0XHRpbWFnZSA9IGltYWdlc1tpXVtqXVxyXG5cdFx0XHRpbWFnZS5zZXRBdHRyaWJ1dGVOUyBudWxsLCd4JywgeFxyXG5cdFx0XHRpbWFnZS5zZXRBdHRyaWJ1dGVOUyBudWxsLCd5JywgeVxyXG5cdFx0XHRpbWFnZS5zZXRBdHRyaWJ1dGVOUyBudWxsLCdocmVmJywgaHJlZlxyXG5cdFx0XHQjYWRkICdpbWFnZScsc3ZnLCB7eDoyNTYqaStvcmlnaW5bMF0sIHk6MjU2Kmorb3JpZ2luWzFdLCBocmVmOmhyZWZ9XHJcblx0XHRcdGFkZCAncmVjdCcsc3ZnLHt4OjI1NippK29yaWdpblswXSwgeToyNTYqaitvcmlnaW5bMV0sIHdpZHRoOjI1NiwgaGVpZ2h0OjI1Niwgc3Ryb2tlOidibGFjaycsICdzdHJva2Utd2lkdGgnOjIsIGZpbGw6J25vbmUnfVxyXG5cclxuc3RhcnR1cCA9IC0+XHJcblx0VyA9IDc2OFxyXG5cdEggPSA3NjhcclxuXHJcblx0YWRkICdyZWN0Jyxzdmcse3g6MCwgeTowLCB3aWR0aDpXLCBoZWlnaHQ6SCwgc3Ryb2tlOidibGFjaycsICdzdHJva2Utd2lkdGgnOjIsIGZpbGw6J2dyZWVuJ31cclxuXHRncmlkID0gZ2VvZGV0aWNfdG9fZ3JpZCBwb3NpdGlvblswXSxwb3NpdGlvblsxXSAjIFRVUk4hXHJcblx0Y2VudGVyID0gKE1hdGgucm91bmQgZyBmb3IgZyBpbiBncmlkKVxyXG5cdFtiYXNlWCxiYXNlWSxkeCxkeV0gPSBjb252ZXJ0IGNlbnRlclxyXG5cdGltYWdlcyA9IFtdXHJcblxyXG5cdGZvciBpIGluIHJhbmdlIDNcclxuXHRcdHJvdyA9IFtdXHJcblx0XHR4ID0gYmFzZVggKyAoMS1pKSAqIDUxMlxyXG5cdFx0Zm9yIGogaW4gcmFuZ2UgM1xyXG5cdFx0XHR5ID0gYmFzZVkgKyAoai0xKSAqIDUxMlxyXG5cdFx0XHRocmVmID0gXCJtYXBzXFxcXCN7eX0tI3t4fS5qcGdcIiAjIFRVUk4hXHJcblx0XHRcdGNvbnNvbGUubG9nIGhyZWZcclxuXHRcdFx0cm93LnB1c2ggYWRkICdpbWFnZScsc3ZnLCB7eDoyNTYqaitkeCwgeToyNTYqaStkeSwgaHJlZjpocmVmfVxyXG5cdFx0XHRhZGQgJ3JlY3QnLHN2Zyx7eDoyNTYqaitkeCwgeToyNTYqaStkeSwgd2lkdGg6MjU2LCBoZWlnaHQ6MjU2LCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MSwgZmlsbDonbm9uZSd9XHJcblx0XHRpbWFnZXMucHVzaCByb3dcclxuXHJcblx0YnV0dG9uIDEwLCAgICAgMTAsICdpbicsICBcImNsaWNrKCdpbiEnKVwiXHJcblx0YnV0dG9uIFctNjAsICAgMTAsICdvdXQnLCBcImNsaWNrKCdvdXQhJylcIlxyXG5cdGJ1dHRvbiAxMCwgICBILTYwLCAnY3RyJywgXCJjbGljaygnY3RyIScpXCJcclxuXHRidXR0b24gVy02MCwgSC02MCwgJ2FpbScsIFwiY2xpY2soJ2FpbSEnKVwiXHJcblx0Y3Jvc3NoYWlyIDc2OC8yLDc2OC8yXHJcblxyXG5cdCNcdHgseSA9IGdyaWRfdG9fZ2VvZGV0aWMgY2VudGVyWzBdLGNlbnRlclsxXVxyXG5cdCNkcmF3TWFwKClcclxuXHJcbnN0YXJ0dXAoKVxyXG4iXX0=
//# sourceURL=c:\github\2021\013-gpsKarta2\coffee\sketch.coffee