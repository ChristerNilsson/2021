// Generated by CoffeeScript 2.4.1
var Button, H, INVISIBLE, SIZE, TargetButton, W, add, aimButton, aimEvent, ass, bearing, center, centrera, click, convert, degrees, distance, drawMap, images, mouse, mousedown, mousemove, mouseup, position, range, rec, recButton, recEvent, rects, setAttrs, startup, svg, svgurl, target, targetButton, texts;

W = 768; // window.innerWidth

H = 768; // window.innerHeight

INVISIBLE = -100;

range = _.range;

ass = function(a, b) {
  return chai.assert.deepEqual(a, b);
};

svgurl = "http://www.w3.org/2000/svg";

svg = document.getElementById('svgOne');

position = [
  59.09443087294174,
  17.7142975294884 // 128 m in.
];


//position = [59.09332934261859, 17.71197528267203] # 6553600, 655360
//position = [59.26519880996387, 18.132755831664422] # lat,lng y,x Home
//position = [59.26698746068617, 18.128352823008175] # Skarpnäcks Torg
//position = [59.2631917949656, 18.12265887424414] # Elhuset
center = []; // skärmens mittpunkt (sweref). Påverkas av pan

target = []; // målkoordinater (sweref)

targetButton = null;

mouse = [];

images = [];

rects = [];

texts = [];

recButton = null;

rec = 0;

aimButton = null;

SIZE = 256; // 128..65536 # rutornas storlek i meter

degrees = function(radians) {
  return radians * 180 / Math.PI;
};

distance = function(p, q) {
  var dx, dy;
  if (p.length !== 2 || q.length !== 2) {
    return 0;
  }
  dx = p[0] - q[0];
  dy = p[1] - q[1];
  return Math.round(Math.sqrt(dx * dx + dy * dy));
};

bearing = function(p, q) {
  var dx, dy, res;
  if (p.length !== 2 || q.length !== 2) {
    return 0;
  }
  dx = p[0] - q[0];
  dy = p[1] - q[1];
  res = 450 - Math.round(degrees(Math.atan2(dx, dy)));
  return res % 360;
};

Button = class Button {
  constructor(x, y, prompt, event, color = '#f000') {
    this.r = 25;
    if (prompt !== "") {
      this.text = add('text', svg, {
        x: x,
        y: y + 5,
        stroke: 'black',
        'stroke-width': 1,
        'text-anchor': 'middle'
      });
      this.text.textContent = prompt;
      this.text.style.fontSize = '25px';
    }
    this.circle = add('circle', svg, {
      cx: x,
      cy: y,
      r: this.r,
      fill: color,
      stroke: 'black',
      'stroke-width': 1,
      onclick: event
    });
  }

};

TargetButton = class TargetButton extends Button {
  constructor(x, y, event, color) {
    super(x, y, '', event, color);
    this.vline = add('line', svg, {
      x1: x - this.r,
      y1: y,
      x2: x + this.r,
      y2: y,
      stroke: 'black',
      'stroke-width': 1
    });
    this.hline = add('line', svg, {
      x1: x,
      y1: y - this.r,
      x2: x,
      y2: y + this.r,
      stroke: 'black',
      'stroke-width': 1
    });
  }

  move() {
    var dx, dy, x, y;
    if (target.length === 0) {
      return;
    }
    dx = target[0] - center[0];
    dy = target[1] - center[1];
    x = H / 2 + Math.floor(dy / (Math.floor(SIZE / 256)));
    y = W / 2 - Math.floor(dx / (Math.floor(SIZE / 256)));
    return this.moveHard(x, y);
  }

  moveHard(x, y) {
    setAttrs(this.circle, {
      cy: y,
      cx: x
    });
    setAttrs(this.vline, {
      x1: x - this.r,
      y1: y,
      x2: x + this.r,
      y2: y
    });
    return setAttrs(this.hline, {
      x1: x,
      y1: y - this.r,
      x2: x,
      y2: y + this.r
    });
  }

};

add = function(type, parent, attrs) {
  var obj;
  obj = document.createElementNS(svgurl, type);
  parent.appendChild(obj);
  setAttrs(obj, attrs);
  return obj;
};

setAttrs = function(obj, attrs) {
  var key, results;
  results = [];
  for (key in attrs) {
    results.push(obj.setAttributeNS(null, key, attrs[key]));
  }
  return results;
};

click = function(s) {
  if (s === 'in' && SIZE > 128) {
    SIZE = Math.floor(SIZE / 2);
  }
  if (s === 'out' && SIZE < 65536) {
    SIZE *= 2;
  }
  if (s === 'ctr') {
    centrera();
  }
  if (s === 'aim') {
    aimEvent();
  }
  return drawMap();
};

mousedown = function(evt) {
  return mouse = [evt.x, evt.y];
};

mouseup = function(evt) {
  return mouse = [];
};

mousemove = function(evt) {
  var factor;
  if (mouse.length === 0) {
    return;
  }
  factor = 2;
  if (SIZE === 128) {
    factor = 0.5;
  }
  if (SIZE === 256) {
    factor = 1;
  }
  center[1] = center[1] - evt.movementX * factor;
  center[0] = center[0] + evt.movementY * factor;
  center[1] = Math.round(center[1]);
  center[0] = Math.round(center[0]);
  return drawMap();
};

// Givet en sweref punkt samt SIZE
//   beräkna rutans nedre vänstra hörn x,y (sweref)
//   beräkna vektor i skärmkoordinater dx,dy (0..256,0..256)
convert = function([x, y]) {
  var dx, dy;
  dx = x % SIZE;
  dy = y % SIZE;
  x -= dx;
  y -= dy;
  if (SIZE === 128) {
    dx = 2 * dx - SIZE;
    dy = SIZE - 2 * dy;
  } else if (SIZE === 256) {
    dx = dx - Math.floor(SIZE / 2);
    dy = Math.floor(SIZE / 2) - dy;
  } else {
    dx = Math.floor(dx / 2) - Math.floor(SIZE / 4);
    dy = Math.floor(SIZE / 4) - Math.floor(dy / 2);
  }
  return [x, y, dx, dy];
};

drawMap = function() {
  var baseX, baseY, dx, dy, href, i, j, k, l, len, len1, ref, ref1, x, y;
  [baseX, baseY, dx, dy] = convert(center);
  console.log([baseX, baseY, dx, dy]);
  ref = range(4);
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    y = baseY + (j - 1) * SIZE;
    ref1 = range(4);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      x = baseX + (1 - i) * SIZE;
      href = `maps\\${SIZE}\\${x}-${y}-${SIZE}.jpg`;
      setAttrs(images[j][i], {
        x: 256 * j + dy,
        y: 256 * i + dx,
        href: href
      });
      setAttrs(rects[j][i], {
        x: 256 * j + dy,
        y: 256 * i + dx
      });
    }
  }
  texts[0].textContent = `C:${center} T:${target} D:${distance(target, center)} B:${bearing(target, center)}`;
  texts[1].textContent = `Z:${SIZE} B:${[baseX, baseY]}`;
  return targetButton.move();
};

centrera = function() {
  var g, grid;
  grid = geodetic_to_grid(position[0], position[1]);
  center = (function() {
    var k, len, results;
    results = [];
    for (k = 0, len = grid.length; k < len; k++) {
      g = grid[k];
      results.push(Math.round(g));
    }
    return results;
  })();
  return drawMap();
};

aimEvent = function() {
  if (target.length === 0) {
    target = center.slice();
    return targetButton.moveHard(W / 2, H / 2);
  } else {
    target = [];
    return targetButton.moveHard(INVISIBLE, INVISIBLE);
  }
};

recEvent = function() {
  rec = 1 - rec;
  return recButton.setAttributeNS(null, 'fill', ['#f008', '#f000'][rec]);
};

startup = function() {
  var baseX, baseY, dx, dy, g, grid, href, i, irow, j, k, l, len, len1, ref, ref1, rrow, text, x, y;
  add('rect', svg, {
    x: 0,
    y: 0,
    width: W,
    height: H,
    stroke: 'black',
    'stroke-width': 2,
    fill: 'green'
  });
  grid = geodetic_to_grid(position[0], position[1]);
  center = (function() {
    var k, len, results;
    results = [];
    for (k = 0, len = grid.length; k < len; k++) {
      g = grid[k];
      results.push(Math.round(g));
    }
    return results;
  })();
  console.log(center);
  [baseX, baseY, dx, dy] = convert(center);
  console.log([baseX, baseY, dx, dy]);
  images = [];
  rects = [];
  texts = [];
  ref = range(4);
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    irow = [];
    rrow = [];
    y = baseY + (j - 1) * SIZE;
    ref1 = range(4);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      x = baseX + (1 - i) * SIZE;
      href = `maps\\${SIZE}\\${x}-${y}-${SIZE
      // TURN!
}.jpg`;
      console.log(href);
      irow.push(add('image', svg, {
        x: 256 * j + dy,
        y: 256 * i + dx,
        href: href
      }));
      rrow.push(add('rect', svg, {
        x: 256 * i + dx,
        y: 256 * j + dy,
        width: 256,
        height: 256,
        stroke: 'black',
        'stroke-width': 1,
        fill: 'none'
      }));
    }
    images.push(irow);
    rects.push(rrow);
  }
  text = add('text', svg, {
    x: W / 2,
    y: 40,
    stroke: 'black',
    'stroke-width': 1,
    'text-anchor': 'middle'
  });
  text.style.fontSize = '25px';
  text.textContent = SIZE;
  texts.push(text);
  text = add('text', svg, {
    x: W / 2,
    y: H - 30,
    stroke: 'black',
    'stroke-width': 1,
    'text-anchor': 'middle'
  });
  text.style.fontSize = '25px';
  text.textContent = SIZE;
  texts.push(text);
  targetButton = new TargetButton(INVISIBLE, INVISIBLE, '', '#f008');
  aimButton = new TargetButton(W / 2, H / 2, "click('aim')");
  new Button(35, 35, 'in', "click('in')");
  new Button(W - 35, 35, 'out', "click('out')");
  new Button(35, H - 35, 'ctr', "click('ctr')");
  recButton = new Button(W - 35, H - 35, 'rec', "recEvent()");
  console.log(grid_to_geodetic(6553600 + 128, 655360 + 128));
  return drawMap();
};

startup();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxTQUFBLEVBQUEsSUFBQSxFQUFBLFlBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLFNBQUEsRUFBQSxRQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxNQUFBLEVBQUEsUUFBQSxFQUFBLEtBQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBLFFBQUEsRUFBQSxPQUFBLEVBQUEsTUFBQSxFQUFBLEtBQUEsRUFBQSxTQUFBLEVBQUEsU0FBQSxFQUFBLE9BQUEsRUFBQSxRQUFBLEVBQUEsS0FBQSxFQUFBLEdBQUEsRUFBQSxTQUFBLEVBQUEsUUFBQSxFQUFBLEtBQUEsRUFBQSxRQUFBLEVBQUEsT0FBQSxFQUFBLEdBQUEsRUFBQSxNQUFBLEVBQUEsTUFBQSxFQUFBLFlBQUEsRUFBQTs7QUFBQSxDQUFBLEdBQUksSUFBSjs7QUFDQSxDQUFBLEdBQUksSUFESjs7QUFFQSxTQUFBLEdBQVksQ0FBQzs7QUFFYixLQUFBLEdBQVEsQ0FBQyxDQUFDOztBQUNWLEdBQUEsR0FBTSxRQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtTQUFTLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBWixDQUFzQixDQUF0QixFQUF5QixDQUF6QjtBQUFUOztBQUVOLE1BQUEsR0FBUzs7QUFDVCxHQUFBLEdBQU0sUUFBUSxDQUFDLGNBQVQsQ0FBd0IsUUFBeEI7O0FBRU4sUUFBQSxHQUFXO0VBQUMsaUJBQUQ7RUFBbUIsZ0JBQW5CO0VBVlg7Ozs7Ozs7QUFpQkEsTUFBQSxHQUFTLEdBakJUOztBQWtCQSxNQUFBLEdBQVMsR0FsQlQ7O0FBbUJBLFlBQUEsR0FBZTs7QUFFZixLQUFBLEdBQVE7O0FBRVIsTUFBQSxHQUFTOztBQUNULEtBQUEsR0FBUTs7QUFDUixLQUFBLEdBQVE7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QUosQ0FBaUIsQ0FBQSxHQUFFLENBQW5CLEVBQXNCLENBQUEsR0FBRSxDQUF4QixFQUEyQixjQUEzQjtFQUNaLElBQUksTUFBSixDQUFXLEVBQVgsRUFBaUIsRUFBakIsRUFBcUIsSUFBckIsRUFBNEIsYUFBNUI7RUFDQSxJQUFJLE1BQUosQ0FBVyxDQUFBLEdBQUUsRUFBYixFQUFpQixFQUFqQixFQUFxQixLQUFyQixFQUE0QixjQUE1QjtFQUNBLElBQUksTUFBSixDQUFXLEVBQVgsRUFBZSxDQUFBLEdBQUUsRUFBakIsRUFBcUIsS0FBckIsRUFBNEIsY0FBNUI7RUFDQSxTQUFBLEdBQVksSUFBSSxNQUFKLENBQVcsQ0FBQSxHQUFFLEVBQWIsRUFBaUIsQ0FBQSxHQUFFLEVBQW5CLEVBQXVCLEtBQXZCLEVBQThCLFlBQTlCO0VBRVosT0FBTyxDQUFDLEdBQVIsQ0FBWSxnQkFBQSxDQUFpQixPQUFBLEdBQVEsR0FBekIsRUFBNkIsTUFBQSxHQUFPLEdBQXBDLENBQVo7U0FDQSxPQUFBLENBQUE7QUEzQ1M7O0FBNkNWLE9BQUEsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIlcgPSA3NjggIyB3aW5kb3cuaW5uZXJXaWR0aFxyXG5IID0gNzY4ICMgd2luZG93LmlubmVySGVpZ2h0XHJcbklOVklTSUJMRSA9IC0xMDBcclxuXHJcbnJhbmdlID0gXy5yYW5nZVxyXG5hc3MgPSAoYSxiKSAtPiBjaGFpLmFzc2VydC5kZWVwRXF1YWwgYSwgYlxyXG5cclxuc3ZndXJsID0gXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHJcbnN2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkICdzdmdPbmUnXHJcblxyXG5wb3NpdGlvbiA9IFs1OS4wOTQ0MzA4NzI5NDE3NCwxNy43MTQyOTc1Mjk0ODg0XSAjIDEyOCBtIGluLlxyXG5cclxuI3Bvc2l0aW9uID0gWzU5LjA5MzMyOTM0MjYxODU5LCAxNy43MTE5NzUyODI2NzIwM10gIyA2NTUzNjAwLCA2NTUzNjBcclxuI3Bvc2l0aW9uID0gWzU5LjI2NTE5ODgwOTk2Mzg3LCAxOC4xMzI3NTU4MzE2NjQ0MjJdICMgbGF0LGxuZyB5LHggSG9tZVxyXG4jcG9zaXRpb24gPSBbNTkuMjY2OTg3NDYwNjg2MTcsIDE4LjEyODM1MjgyMzAwODE3NV0gIyBTa2FycG7DpGNrcyBUb3JnXHJcbiNwb3NpdGlvbiA9IFs1OS4yNjMxOTE3OTQ5NjU2LCAxOC4xMjI2NTg4NzQyNDQxNF0gIyBFbGh1c2V0XHJcblxyXG5jZW50ZXIgPSBbXSAjIHNrw6RybWVucyBtaXR0cHVua3QgKHN3ZXJlZikuIFDDpXZlcmthcyBhdiBwYW5cclxudGFyZ2V0ID0gW10gIyBtw6Vsa29vcmRpbmF0ZXIgKHN3ZXJlZilcclxudGFyZ2V0QnV0dG9uID0gbnVsbFxyXG5cclxubW91c2UgPSBbXVxyXG5cclxuaW1hZ2VzID0gW11cclxucmVjdHMgPSBbXVxyXG50ZXh0cyA9IFtdXHJcblxyXG5yZWNCdXR0b24gPSBudWxsXHJcbnJlYyA9IDBcclxuYWltQnV0dG9uID0gbnVsbFxyXG5cclxuU0laRSA9IDI1NiAjIDEyOC4uNjU1MzYgIyBydXRvcm5hcyBzdG9ybGVrIGkgbWV0ZXJcclxuXHJcbmRlZ3JlZXMgPSAocmFkaWFucykgLT4gcmFkaWFucyAqIDE4MCAvIE1hdGguUElcclxuXHJcbmRpc3RhbmNlID0gKHAscSkgLT5cclxuXHRpZiBwLmxlbmd0aCAhPSAyIG9yIHEubGVuZ3RoICE9IDIgdGhlbiByZXR1cm4gMFxyXG5cdGR4ID0gcFswXSAtIHFbMF1cclxuXHRkeSA9IHBbMV0gLSBxWzFdXHJcblx0TWF0aC5yb3VuZCBNYXRoLnNxcnQgZHggKiBkeCArIGR5ICogZHlcclxuXHJcbmJlYXJpbmcgPSAocCxxKSAtPlxyXG5cdGlmIHAubGVuZ3RoIT0yIG9yIHEubGVuZ3RoIT0yIHRoZW4gcmV0dXJuIDBcclxuXHRkeCA9IHBbMF0gLSBxWzBdXHJcblx0ZHkgPSBwWzFdIC0gcVsxXVxyXG5cdHJlcyA9IDQ1MCAtIE1hdGgucm91bmQgZGVncmVlcyBNYXRoLmF0YW4yIGR4LGR5XHJcblx0cmVzICUgMzYwXHJcblxyXG5jbGFzcyBCdXR0b24gXHJcblx0Y29uc3RydWN0b3IgOiAoeCx5LHByb21wdCxldmVudCxjb2xvcj0nI2YwMDAnKSAtPlxyXG5cdFx0QHIgPSAyNVxyXG5cdFx0aWYgcHJvbXB0ICE9IFwiXCJcclxuXHRcdFx0QHRleHQgPSBhZGQgJ3RleHQnLHN2Zywge3g6eCwgeTp5KzUsIHN0cm9rZTonYmxhY2snLCAnc3Ryb2tlLXdpZHRoJzoxLCAndGV4dC1hbmNob3InOidtaWRkbGUnfVxyXG5cdFx0XHRAdGV4dC50ZXh0Q29udGVudCA9IHByb21wdFxyXG5cdFx0XHRAdGV4dC5zdHlsZS5mb250U2l6ZSA9ICcyNXB4J1xyXG5cdFx0QGNpcmNsZSA9IGFkZCAnY2lyY2xlJyxzdmcsIHtjeDp4LCBjeTp5LCByOkByLCBmaWxsOmNvbG9yLCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MSwgb25jbGljazpldmVudH1cclxuXHJcbmNsYXNzIFRhcmdldEJ1dHRvbiBleHRlbmRzIEJ1dHRvblxyXG5cdGNvbnN0cnVjdG9yIDogKHgseSxldmVudCxjb2xvcikgLT5cclxuXHRcdHN1cGVyIHgseSwnJyxldmVudCxjb2xvclxyXG5cdFx0QHZsaW5lID0gYWRkICdsaW5lJyxzdmcsIHt4MTp4LUByLCB5MTp5LCB4Mjp4K0ByLCB5Mjp5LCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MX1cclxuXHRcdEBobGluZSA9IGFkZCAnbGluZScsc3ZnLCB7eDE6eCwgeTE6eS1AciwgeDI6eCwgeTI6eStAciwgc3Ryb2tlOidibGFjaycsICdzdHJva2Utd2lkdGgnOjF9XHJcblxyXG5cdG1vdmUgOiAoKSAtPlxyXG5cdFx0aWYgdGFyZ2V0Lmxlbmd0aCA9PSAwIHRoZW4gcmV0dXJuXHJcblx0XHRkeCA9IHRhcmdldFswXS1jZW50ZXJbMF1cclxuXHRcdGR5ID0gdGFyZ2V0WzFdLWNlbnRlclsxXVxyXG5cdFx0eCA9IEgvMiArIGR5IC8vIChTSVpFLy8yNTYpXHJcblx0XHR5ID0gVy8yIC0gZHggLy8gKFNJWkUvLzI1NilcclxuXHRcdEBtb3ZlSGFyZCB4LHlcclxuXHJcblx0bW92ZUhhcmQgOiAoeCx5KSAtPlxyXG5cdFx0c2V0QXR0cnMgQGNpcmNsZSwge2N5OnksIGN4Onh9XHJcblx0XHRzZXRBdHRycyBAdmxpbmUsIHt4MTp4LUByLCB5MTp5LCB4Mjp4K0ByLCB5Mjp5fVxyXG5cdFx0c2V0QXR0cnMgQGhsaW5lLCB7eDE6eCwgeTE6eS1AciwgeDI6eCwgeTI6eStAcn1cclxuXHJcbmFkZCA9ICh0eXBlLHBhcmVudCxhdHRycykgLT5cclxuXHRvYmogPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMgc3ZndXJsLCB0eXBlXHJcblx0cGFyZW50LmFwcGVuZENoaWxkIG9ialxyXG5cdHNldEF0dHJzIG9iaixhdHRyc1xyXG5cdG9ialxyXG5cclxuc2V0QXR0cnMgPSAob2JqLGF0dHJzKSAtPlxyXG5cdGZvciBrZXkgb2YgYXR0cnNcclxuXHRcdG9iai5zZXRBdHRyaWJ1dGVOUyBudWxsLCBrZXksIGF0dHJzW2tleV1cclxuXHJcbmNsaWNrID0gKHMpIC0+IFxyXG5cdGlmIHM9PSdpbicgIGFuZCBTSVpFID4gMTI4IHRoZW4gU0laRSAvLz0gMlxyXG5cdGlmIHM9PSdvdXQnIGFuZCBTSVpFIDwgNjU1MzYgdGhlbiBTSVpFICo9IDJcclxuXHRpZiBzPT0nY3RyJyB0aGVuIGNlbnRyZXJhKClcclxuXHRpZiBzPT0nYWltJyB0aGVuIGFpbUV2ZW50KClcclxuXHRkcmF3TWFwKClcclxuXHJcbm1vdXNlZG93biA9IChldnQpIC0+IG1vdXNlID0gW2V2dC54LGV2dC55XVxyXG5tb3VzZXVwICAgPSAoZXZ0KSAtPiBtb3VzZSA9IFtdXHJcbm1vdXNlbW92ZSA9IChldnQpIC0+XHJcblx0aWYgbW91c2UubGVuZ3RoID09IDAgdGhlbiByZXR1cm5cclxuXHRmYWN0b3IgPSAyXHJcblx0aWYgU0laRSA9PSAxMjggdGhlbiBmYWN0b3IgPSAwLjVcclxuXHRpZiBTSVpFID09IDI1NiB0aGVuIGZhY3RvciA9IDFcclxuXHRjZW50ZXJbMV0gPSBjZW50ZXJbMV0gLSBldnQubW92ZW1lbnRYICogZmFjdG9yXHJcblx0Y2VudGVyWzBdID0gY2VudGVyWzBdICsgZXZ0Lm1vdmVtZW50WSAqIGZhY3RvciBcclxuXHRjZW50ZXJbMV0gPSBNYXRoLnJvdW5kIGNlbnRlclsxXVxyXG5cdGNlbnRlclswXSA9IE1hdGgucm91bmQgY2VudGVyWzBdXHJcblx0ZHJhd01hcCgpXHJcblxyXG4jIEdpdmV0IGVuIHN3ZXJlZiBwdW5rdCBzYW10IFNJWkVcclxuIyAgIGJlcsOka25hIHJ1dGFucyBuZWRyZSB2w6Ruc3RyYSBow7ZybiB4LHkgKHN3ZXJlZilcclxuIyAgIGJlcsOka25hIHZla3RvciBpIHNrw6RybWtvb3JkaW5hdGVyIGR4LGR5ICgwLi4yNTYsMC4uMjU2KVxyXG5jb252ZXJ0ID0gKFt4LHldKSAtPlxyXG5cdGR4ID0geCAlIFNJWkVcclxuXHRkeSA9IHkgJSBTSVpFXHJcblx0eCAtPSBkeFxyXG5cdHkgLT0gZHlcclxuXHJcblx0aWYgU0laRSA9PSAxMjhcclxuXHRcdGR4ID0gMipkeC1TSVpFXHJcblx0XHRkeSA9IFNJWkUtMipkeVxyXG5cdGVsc2UgaWYgU0laRSA9PSAyNTZcclxuXHRcdGR4ID0gZHgtU0laRS8vMlxyXG5cdFx0ZHkgPSBTSVpFLy8yLWR5XHJcblx0ZWxzZVxyXG5cdFx0ZHggPSBkeC8vMi1TSVpFLy80XHJcblx0XHRkeSA9IFNJWkUvLzQtZHkvLzJcclxuXHJcblx0W3gsIHksIGR4LGR5XVxyXG5cclxuZHJhd01hcCA9IC0+XHJcblx0W2Jhc2VYLGJhc2VZLGR4LGR5XSA9IGNvbnZlcnQgY2VudGVyXHJcblx0Y29uc29sZS5sb2cgW2Jhc2VYLGJhc2VZLGR4LGR5XVxyXG5cdGZvciBqIGluIHJhbmdlIDRcclxuXHRcdHkgPSBiYXNlWSArIChqLTEpICogU0laRVxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgNFxyXG5cdFx0XHR4ID0gYmFzZVggKyAoMS1pKSAqIFNJWkVcclxuXHRcdFx0aHJlZiA9IFwibWFwc1xcXFwje1NJWkV9XFxcXCN7eH0tI3t5fS0je1NJWkV9LmpwZ1wiXHJcblx0XHRcdHNldEF0dHJzIGltYWdlc1tqXVtpXSwge3g6MjU2KmorZHksIHk6MjU2KmkrZHgsIGhyZWY6aHJlZn1cclxuXHRcdFx0c2V0QXR0cnMgcmVjdHNbal1baV0sIHt4OjI1NipqK2R5LCB5OjI1NippK2R4fVxyXG5cdHRleHRzWzBdLnRleHRDb250ZW50ID0gXCJDOiN7Y2VudGVyfSBUOiN7dGFyZ2V0fSBEOiN7ZGlzdGFuY2UodGFyZ2V0LGNlbnRlcil9IEI6I3tiZWFyaW5nKHRhcmdldCxjZW50ZXIpfVwiXHJcblx0dGV4dHNbMV0udGV4dENvbnRlbnQgPSBcIlo6I3tTSVpFfSBCOiN7W2Jhc2VYLGJhc2VZXX1cIlxyXG5cdHRhcmdldEJ1dHRvbi5tb3ZlKClcclxuXHJcbmNlbnRyZXJhID0gKCkgLT5cclxuXHRncmlkID0gZ2VvZGV0aWNfdG9fZ3JpZCBwb3NpdGlvblswXSxwb3NpdGlvblsxXSAjIFRVUk4hXHJcblx0Y2VudGVyID0gKE1hdGgucm91bmQgZyBmb3IgZyBpbiBncmlkKVxyXG5cdGRyYXdNYXAoKVxyXG5cclxuYWltRXZlbnQgPSAoKSAtPlxyXG5cdGlmIHRhcmdldC5sZW5ndGggPT0gMFxyXG5cdFx0dGFyZ2V0ID0gY2VudGVyLnNsaWNlKClcclxuXHRcdHRhcmdldEJ1dHRvbi5tb3ZlSGFyZCBXLzIsSC8yXHJcblx0ZWxzZVxyXG5cdFx0dGFyZ2V0ID0gW11cclxuXHRcdHRhcmdldEJ1dHRvbi5tb3ZlSGFyZCBJTlZJU0lCTEUsIElOVklTSUJMRVxyXG5cclxucmVjRXZlbnQgPSAoKSAtPlxyXG5cdHJlYyA9IDEgLSByZWNcclxuXHRyZWNCdXR0b24uc2V0QXR0cmlidXRlTlMgbnVsbCwgJ2ZpbGwnLFsnI2YwMDgnLCcjZjAwMCddW3JlY11cclxuXHJcbnN0YXJ0dXAgPSAtPlxyXG5cdGFkZCAncmVjdCcsc3ZnLHt4OjAsIHk6MCwgd2lkdGg6VywgaGVpZ2h0OkgsIHN0cm9rZTonYmxhY2snLCAnc3Ryb2tlLXdpZHRoJzoyLCBmaWxsOidncmVlbid9XHJcblx0Z3JpZCA9IGdlb2RldGljX3RvX2dyaWQgcG9zaXRpb25bMF0scG9zaXRpb25bMV0gIyBUVVJOIVxyXG5cdGNlbnRlciA9IChNYXRoLnJvdW5kIGcgZm9yIGcgaW4gZ3JpZClcclxuXHRjb25zb2xlLmxvZyBjZW50ZXJcclxuXHRbYmFzZVgsYmFzZVksZHgsZHldID0gY29udmVydCBjZW50ZXJcclxuXHRjb25zb2xlLmxvZyBbYmFzZVgsYmFzZVksZHgsZHldXHJcblxyXG5cdGltYWdlcyA9IFtdXHJcblx0cmVjdHMgPSBbXVxyXG5cdHRleHRzID0gW11cclxuXHJcblx0Zm9yIGogaW4gcmFuZ2UgNFxyXG5cdFx0aXJvdyA9IFtdXHJcblx0XHRycm93ID0gW11cclxuXHRcdHkgPSBiYXNlWSArIChqLTEpICogU0laRVxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgNFxyXG5cdFx0XHR4ID0gYmFzZVggKyAoMS1pKSAqIFNJWkUgXHJcblx0XHRcdGhyZWYgPSBcIm1hcHNcXFxcI3tTSVpFfVxcXFwje3h9LSN7eX0tI3tTSVpFfS5qcGdcIiAjIFRVUk4hXHJcblx0XHRcdGNvbnNvbGUubG9nIGhyZWZcclxuXHRcdFx0aXJvdy5wdXNoIGFkZCAnaW1hZ2UnLHN2Zywge3g6MjU2KmorZHksIHk6MjU2KmkrZHgsIGhyZWY6aHJlZn1cclxuXHRcdFx0cnJvdy5wdXNoIGFkZCAncmVjdCcsIHN2Zywge3g6MjU2KmkrZHgsIHk6MjU2KmorZHksIHdpZHRoOjI1NiwgaGVpZ2h0OjI1Niwgc3Ryb2tlOidibGFjaycsICdzdHJva2Utd2lkdGgnOjEsIGZpbGw6J25vbmUnfVxyXG5cdFx0aW1hZ2VzLnB1c2ggaXJvd1xyXG5cdFx0cmVjdHMucHVzaCBycm93XHJcblxyXG5cdHRleHQgPSBhZGQgJ3RleHQnLHN2Zywge3g6Vy8yLCB5OjQwLCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MSwgJ3RleHQtYW5jaG9yJzonbWlkZGxlJ31cclxuXHR0ZXh0LnN0eWxlLmZvbnRTaXplID0gJzI1cHgnXHJcblx0dGV4dC50ZXh0Q29udGVudCA9IFNJWkVcclxuXHR0ZXh0cy5wdXNoIHRleHQgXHJcblxyXG5cdHRleHQgPSBhZGQgJ3RleHQnLHN2Zywge3g6Vy8yLCB5OkgtMzAsIHN0cm9rZTonYmxhY2snLCAnc3Ryb2tlLXdpZHRoJzoxLCAndGV4dC1hbmNob3InOidtaWRkbGUnfVxyXG5cdHRleHQuc3R5bGUuZm9udFNpemUgPSAnMjVweCdcclxuXHR0ZXh0LnRleHRDb250ZW50ID0gU0laRVxyXG5cdHRleHRzLnB1c2ggdGV4dCBcclxuXHJcblx0dGFyZ2V0QnV0dG9uID0gbmV3IFRhcmdldEJ1dHRvbiBJTlZJU0lCTEUsIElOVklTSUJMRSwgJycsICcjZjAwOCdcclxuXHRhaW1CdXR0b24gPSBuZXcgVGFyZ2V0QnV0dG9uIFcvMiwgSC8yLCBcImNsaWNrKCdhaW0nKVwiXHJcblx0bmV3IEJ1dHRvbiAzNSwgICAzNSwgJ2luJywgIFwiY2xpY2soJ2luJylcIlxyXG5cdG5ldyBCdXR0b24gVy0zNSwgMzUsICdvdXQnLCBcImNsaWNrKCdvdXQnKVwiXHJcblx0bmV3IEJ1dHRvbiAzNSwgSC0zNSwgJ2N0cicsIFwiY2xpY2soJ2N0cicpXCJcclxuXHRyZWNCdXR0b24gPSBuZXcgQnV0dG9uIFctMzUsIEgtMzUsICdyZWMnLCBcInJlY0V2ZW50KClcIlxyXG5cclxuXHRjb25zb2xlLmxvZyBncmlkX3RvX2dlb2RldGljIDY1NTM2MDArMTI4LDY1NTM2MCsxMjhcclxuXHRkcmF3TWFwKClcclxuXHJcbnN0YXJ0dXAoKVxyXG4iXX0=
//# sourceURL=c:\github\2021\013-gpsKarta2\coffee\sketch.coffee