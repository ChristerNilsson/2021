// Generated by CoffeeScript 2.4.1
var Button, TargetButton;

Button = class Button {
  constructor(x1, y1, prompt, event, color = '#f000') {
    this.x = x1;
    this.y = y1;
    this.prompt = prompt;
    this.r = 128;
    this.circle0 = add('circle', svg, {
      cx: this.x,
      cy: this.y,
      r: this.r,
      fill: 'none',
      stroke: 'black',
      'stroke-width': 1
    });
    if (this.prompt !== "") {
      this.text = add('text', svg, {
        x: this.x,
        y: this.y + 10,
        stroke: 'black',
        fill: 'black',
        'stroke-width': 1,
        'text-anchor': 'middle'
      });
      this.text.textContent = this.prompt;
      this.text.style.fontSize = '50px';
      this.text.style.userSelect = 'none';
    }
    this.circle1 = add('circle', svg, {
      cx: this.x,
      cy: this.y,
      r: this.r,
      fill: color,
      stroke: 'black',
      'stroke-width': 1,
      ontouchstart: event,
      onclick: event
    });
  }

  setColor(color) {
    return setAttrs(this.circle1, {
      fill: color
    });
  }

  setTextFill(color) {
    return setAttrs(this.text, {
      fill: color
    });
  }

  enable() {
    setAttrs(this.circle0, {
      cx: this.x
    });
    setAttrs(this.circle1, {
      cx: this.x
    });
    if (this.prompt !== '') {
      return setAttrs(this.text, {
        x: this.x
      });
    }
  }

  disable() {
    setAttrs(this.circle0, {
      cx: INVISIBLE
    });
    setAttrs(this.circle1, {
      cx: INVISIBLE
    });
    if (this.prompt !== '') {
      return setAttrs(this.text, {
        x: INVISIBLE
      });
    }
  }

};

TargetButton = class TargetButton extends Button {
  constructor(x, y, event, color) {
    super(x, y, '', event, color);
    this.vline = add('line', svg, {
      x1: x - this.r,
      y1: y,
      x2: x + this.r,
      y2: y,
      stroke: 'black',
      'stroke-width': 1
    });
    this.hline = add('line', svg, {
      x1: x,
      y1: y - this.r,
      x2: x,
      y2: y + this.r,
      stroke: 'black',
      'stroke-width': 1
    });
  }

  move() {
    var antal, dx, dy, x, y;
    if (target.length === 0) {
      return;
    }
    dx = target[0] - center[0];
    dy = target[1] - center[1];
    antal = SIZE / TILE;
    x = W / 2 + dx / antal;
    y = H / 2 - dy / antal;
    return this.moveHard(x, y);
  }

  moveHard(x, y) {
    setAttrs(this.circle1, {
      cx: x,
      cy: y
    });
    setAttrs(this.vline, {
      x1: x - this.r,
      y1: y,
      x2: x + this.r,
      y2: y
    });
    return setAttrs(this.hline, {
      x1: x,
      y1: y - this.r,
      x2: x,
      y2: y + this.r
    });
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXGJ1dHRvbi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBOztBQUFNLFNBQU4sTUFBQSxPQUFBO0VBQ0MsV0FBYyxHQUFBLElBQUEsUUFBQSxFQUFlLEtBQWYsRUFBcUIsUUFBTSxPQUEzQixDQUFBO0lBQUMsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQ3JCLElBQUMsQ0FBQSxDQUFELEdBQUs7SUFDTCxJQUFDLENBQUEsT0FBRCxHQUFXLEdBQUEsQ0FBSSxRQUFKLEVBQWEsR0FBYixFQUFrQjtNQUFDLEVBQUEsRUFBRyxJQUFDLENBQUEsQ0FBTDtNQUFRLEVBQUEsRUFBRyxJQUFDLENBQUEsQ0FBWjtNQUFlLENBQUEsRUFBRSxJQUFDLENBQUEsQ0FBbEI7TUFBcUIsSUFBQSxFQUFLLE1BQTFCO01BQWtDLE1BQUEsRUFBTyxPQUF6QztNQUFrRCxjQUFBLEVBQWU7SUFBakUsQ0FBbEI7SUFDWCxJQUFHLElBQUMsQ0FBQSxNQUFELEtBQVcsRUFBZDtNQUNDLElBQUMsQ0FBQSxJQUFELEdBQVEsR0FBQSxDQUFJLE1BQUosRUFBVyxHQUFYLEVBQWdCO1FBQUMsQ0FBQSxFQUFFLElBQUMsQ0FBQSxDQUFKO1FBQU8sQ0FBQSxFQUFFLElBQUMsQ0FBQSxDQUFELEdBQUcsRUFBWjtRQUFnQixNQUFBLEVBQU8sT0FBdkI7UUFBZ0MsSUFBQSxFQUFLLE9BQXJDO1FBQThDLGNBQUEsRUFBZSxDQUE3RDtRQUFnRSxhQUFBLEVBQWM7TUFBOUUsQ0FBaEI7TUFDUixJQUFDLENBQUEsSUFBSSxDQUFDLFdBQU4sR0FBb0IsSUFBQyxDQUFBO01BQ3JCLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVosR0FBdUI7TUFDdkIsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBWixHQUF5QixPQUoxQjs7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QUFLLE1BQU8sQ0FBQSxDQUFBLENBQVAsR0FBWSxNQUFPLENBQUEsQ0FBQTtJQUN4QixLQUFBLEdBQVEsSUFBQSxHQUFLO0lBQ2IsQ0FBQSxHQUFJLENBQUEsR0FBRSxDQUFGLEdBQU0sRUFBQSxHQUFLO0lBQ2YsQ0FBQSxHQUFJLENBQUEsR0FBRSxDQUFGLEdBQU0sRUFBQSxHQUFLO1dBQ2YsSUFBQyxDQUFBLFFBQUQsQ0FBVSxDQUFWLEVBQVksQ0FBWjtFQVBNOztFQVNQLFFBQVcsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBO0lBQ1YsUUFBQSxDQUFTLElBQUMsQ0FBQSxPQUFWLEVBQW1CO01BQUMsRUFBQSxFQUFHLENBQUo7TUFBTyxFQUFBLEVBQUc7SUFBVixDQUFuQjtJQUNBLFFBQUEsQ0FBUyxJQUFDLENBQUEsS0FBVixFQUFpQjtNQUFDLEVBQUEsRUFBRyxDQUFBLEdBQUUsSUFBQyxDQUFBLENBQVA7TUFBVSxFQUFBLEVBQUcsQ0FBYjtNQUFnQixFQUFBLEVBQUcsQ0FBQSxHQUFFLElBQUMsQ0FBQSxDQUF0QjtNQUF5QixFQUFBLEVBQUc7SUFBNUIsQ0FBakI7V0FDQSxRQUFBLENBQVMsSUFBQyxDQUFBLEtBQVYsRUFBaUI7TUFBQyxFQUFBLEVBQUcsQ0FBSjtNQUFPLEVBQUEsRUFBRyxDQUFBLEdBQUUsSUFBQyxDQUFBLENBQWI7TUFBZ0IsRUFBQSxFQUFHLENBQW5CO01BQXNCLEVBQUEsRUFBRyxDQUFBLEdBQUUsSUFBQyxDQUFBO0lBQTVCLENBQWpCO0VBSFU7O0FBZloiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCdXR0b24gXHJcblx0Y29uc3RydWN0b3IgOiAoQHgsQHksQHByb21wdCxldmVudCxjb2xvcj0nI2YwMDAnKSAtPlxyXG5cdFx0QHIgPSAxMjhcclxuXHRcdEBjaXJjbGUwID0gYWRkICdjaXJjbGUnLHN2Zywge2N4OkB4LCBjeTpAeSwgcjpAciwgZmlsbDonbm9uZScsIHN0cm9rZTonYmxhY2snLCAnc3Ryb2tlLXdpZHRoJzoxfVxyXG5cdFx0aWYgQHByb21wdCAhPSBcIlwiXHJcblx0XHRcdEB0ZXh0ID0gYWRkICd0ZXh0JyxzdmcsIHt4OkB4LCB5OkB5KzEwLCBzdHJva2U6J2JsYWNrJywgZmlsbDonYmxhY2snLCAnc3Ryb2tlLXdpZHRoJzoxLCAndGV4dC1hbmNob3InOidtaWRkbGUnfVxyXG5cdFx0XHRAdGV4dC50ZXh0Q29udGVudCA9IEBwcm9tcHRcclxuXHRcdFx0QHRleHQuc3R5bGUuZm9udFNpemUgPSAnNTBweCdcclxuXHRcdFx0QHRleHQuc3R5bGUudXNlclNlbGVjdCA9ICdub25lJ1xyXG5cdFx0QGNpcmNsZTEgPSBhZGQgJ2NpcmNsZScsc3ZnLCB7Y3g6QHgsIGN5OkB5LCByOkByLCBmaWxsOmNvbG9yLCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MSwgb250b3VjaHN0YXJ0OmV2ZW50LCBvbmNsaWNrOmV2ZW50fVxyXG5cdHNldENvbG9yIDogKGNvbG9yKSAtPiBzZXRBdHRycyBAY2lyY2xlMSwge2ZpbGw6Y29sb3J9XHJcblx0c2V0VGV4dEZpbGwgOiAoY29sb3IpIC0+IHNldEF0dHJzIEB0ZXh0LCB7ZmlsbDpjb2xvcn1cclxuXHRlbmFibGUgOiAtPiBcclxuXHRcdHNldEF0dHJzIEBjaXJjbGUwLCB7Y3g6QHh9XHJcblx0XHRzZXRBdHRycyBAY2lyY2xlMSwge2N4OkB4fVxyXG5cdFx0aWYgQHByb21wdCE9JycgdGhlbiBzZXRBdHRycyBAdGV4dCwge3g6QHh9XHJcblx0ZGlzYWJsZSA6IC0+IFxyXG5cdFx0c2V0QXR0cnMgQGNpcmNsZTAsIHtjeDpJTlZJU0lCTEV9XHJcblx0XHRzZXRBdHRycyBAY2lyY2xlMSwge2N4OklOVklTSUJMRX1cclxuXHRcdGlmIEBwcm9tcHQhPScnIHRoZW4gc2V0QXR0cnMgQHRleHQsIHt4OklOVklTSUJMRX1cclxuXHJcbmNsYXNzIFRhcmdldEJ1dHRvbiBleHRlbmRzIEJ1dHRvblxyXG5cdGNvbnN0cnVjdG9yIDogKHgseSxldmVudCxjb2xvcikgLT5cclxuXHRcdHN1cGVyIHgseSwnJyxldmVudCxjb2xvclxyXG5cdFx0QHZsaW5lID0gYWRkICdsaW5lJyxzdmcsIHt4MTp4LUByLCB5MTp5LCB4Mjp4K0ByLCB5Mjp5LCBzdHJva2U6J2JsYWNrJywgJ3N0cm9rZS13aWR0aCc6MX1cclxuXHRcdEBobGluZSA9IGFkZCAnbGluZScsc3ZnLCB7eDE6eCwgeTE6eS1AciwgeDI6eCwgeTI6eStAciwgc3Ryb2tlOidibGFjaycsICdzdHJva2Utd2lkdGgnOjF9XHJcblxyXG5cdG1vdmUgOiAtPlxyXG5cdFx0aWYgdGFyZ2V0Lmxlbmd0aCA9PSAwIHRoZW4gcmV0dXJuXHJcblx0XHRkeCA9IHRhcmdldFswXSAtIGNlbnRlclswXVxyXG5cdFx0ZHkgPSB0YXJnZXRbMV0gLSBjZW50ZXJbMV1cclxuXHRcdGFudGFsID0gU0laRS9USUxFXHJcblx0XHR4ID0gVy8yICsgZHggLyBhbnRhbFxyXG5cdFx0eSA9IEgvMiAtIGR5IC8gYW50YWxcclxuXHRcdEBtb3ZlSGFyZCB4LHlcclxuXHJcblx0bW92ZUhhcmQgOiAoeCx5KSAtPlxyXG5cdFx0c2V0QXR0cnMgQGNpcmNsZTEsIHtjeDp4LCBjeTp5fVxyXG5cdFx0c2V0QXR0cnMgQHZsaW5lLCB7eDE6eC1AciwgeTE6eSwgeDI6eCtAciwgeTI6eX1cclxuXHRcdHNldEF0dHJzIEBobGluZSwge3gxOngsIHkxOnktQHIsIHgyOngsIHkyOnkrQHJ9XHJcbiJdfQ==
//# sourceURL=c:\github\2021\013-gpsKarta2\coffee\button.coffee