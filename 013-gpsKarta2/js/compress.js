// Generated by CoffeeScript 2.4.1
var LETTERS, decode, decodeAll, encode, encodeAll;

LETTERS = 'zyxwvutsrqponmlkjihgfedcba0ABCDEFGHIJKLMNOPQRSTUVWXYZ';

// endimensionell komprimering
// c b a 0 A B C = -3 -2 -1 0 1 2 3
// Tv√• tecken per koordinat

// Exempel: 
// [1017,1373] absolut
// [1016,1378] (-1,5) aE
// [1016,1383] (0,5) 0E
// [1017,1388] (1,5) AE
// Kodas: 1017,1373,aE0EAE
encode = function(x, y) {
  var x0, x1, y0, y1;
  if ((-26 <= x && x <= 26) && (-26 <= y && y <= 26)) {
    return LETTERS[26 + x] + LETTERS[26 + y];
  }
  [x0, y0] = [Math.floor(x / 2), Math.floor(y / 2)];
  [x1, y1] = [x - x0, y - y0];
  return encode(x0, y0) + encode(x1, y1);
};

ass('00', encode(0, 0));

ass('0A', encode(0, 1));

ass('A0', encode(1, 0));

ass('CC', encode(3, 3));

ass('FF', encode(6, 6));

ass('GG', encode(7, 7));

ass('NN', encode(14, 14));

ass('0a', encode(0, -1));

ass('a0', encode(-1, 0));

ass('cC', encode(-3, 3));

ass('Ff', encode(6, -6));

ass('gG', encode(-7, 7));

ass('Nn', encode(14, -14));

ass('Zz', encode(26, -26));

ass('MnNm', encode(27, -27));

ass('LYMYLYMY', encode(50, 100));

decode = function(xy) {
  var ix, iy;
  ix = -26 + LETTERS.indexOf(xy[0]);
  iy = -26 + LETTERS.indexOf(xy[1]);
  return [ix, iy];
};

ass([1, 0], decode('A0'));

ass([0, 1], decode('0A'));

ass([7, 7], decode('GG'));

ass([26, -26], decode('Zz'));

encodeAll = function(pairs) { // pairs of floating point
  var dx, dy, ex, ey, i, ix, iy, j, len, ref, result, x, x0, x1, y, y0, y1;
  [x, y] = pairs[0];
  [ix, iy] = [Math.round(x), Math.round(y)];
  [ex, ey] = [
    x - ix,
    y - iy // hanterar det ackumulerade felet pga avrundning
  ];
  result = `${ix},${iy}`;
  if (pairs.length > 1) {
    result += ',';
  }
  ref = range(1, pairs.length);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    [x0, y0] = pairs[i - 1];
    [x1, y1] = pairs[i];
    [dx, dy] = [ex + x1 - x0, ey + y1 - y0];
    [ix, iy] = [Math.round(dx), Math.round(dy)];
    [ex, ey] = [dx - ix, dy - iy];
    if (ix !== 0 || iy !== 0) {
      result += encode(ix, iy); // removes [0,0]
    }
  }
  return result;
};

ass('1018,1373,bFAD', encodeAll([[1017.9, 1373.1], [1016.1, 1378.9], [1016.9, 1383.1]]));

ass('1017,1373', encodeAll([[1017, 1373]]));

decodeAll = function(s) {
  var dx, dy, i, j, len, points, ref, result, x, xy, y;
  result = [];
  [x, y, points] = s.split(',');
  x = parseInt(x);
  y = parseInt(y);
  result.push([x, y]);
  if (!points) {
    return result;
  }
  ref = range(0, points.length, 2);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    xy = points.slice(i, i + 2);
    [dx, dy] = decode(xy);
    x += dx;
    y += dy;
    result.push([x, y]);
  }
  return result;
};

ass([[1018, 1373], [1016, 1379], [1017, 1383]], decodeAll('1018,1373,bFAD'));

ass([[0, 0], [3, -8], [-15, -17], [-34, -37], [-39, -55]], decodeAll('0,0,Christer'));

ass([[1, 2], [4, -6], [-14, -15], [-33, -35], [-38, -53]], decodeAll('1,2,Christer'));

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2021\013-gpsKarta2\coffee\compress.coffee