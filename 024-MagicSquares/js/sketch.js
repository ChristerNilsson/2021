// Generated by CoffeeScript 2.4.1
var ANCHORS, Button, Selector, ass, didj, draw, even, iSel, jSel, makeANCHORS, manhattan, mousePressed, n, nSel, nr, odd, range, rowsum, setup, start, x, y;

ass = function(a, b) {
  if (chai.assert.deepEqual(a, b)) {
    return console.log(a, b);
  }
};

range = _.range;

n = null;

ANCHORS = null;

nSel = null;

iSel = null;

jSel = null;

makeANCHORS = function(n0) {
  n = n0;
  return ANCHORS = [[[Math.floor(n / 2), 0], [0, n]], [[0, Math.floor(n / 2)], [n, 0]], [[n - 1, Math.floor(n / 2)], [-n, 0]], [[Math.floor(n / 2), n - 1], [0, -n]]];
};

nr = function(i, j) {
  if ((i + j) % 2 === 0) {
    return even(i, j);
  } else {
    return odd(i, j);
  }
};

even = function(i, j) {
  return Math.floor(x(i, j) / 2) + 1 + n * (Math.floor(y(i, j) / 2));
};

odd = function(i, j) {
  var di, dj;
  [di, dj] = didj(i, j)[1];
  return even(i + di, j + dj);
};

x = function(i, j) {
  return i - j + n - 1;
};

y = function(i, j) {
  return 2 * n - 2 - i - j;
};

manhattan = function(a, b, c, d) {
  return Math.abs(a - c) + Math.abs(b - d);
};

didj = function(i, j) {
  return _.minBy(ANCHORS, function([[a, b], [c, d]]) {
    return manhattan(a, b, i, j);
  });
};

rowsum = function(j) {
  var i, k, len, ref, res;
  res = 0;
  ref = range(n);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    res += nr(i, j);
  }
  return res;
};

Button = class Button {
  constructor(prompt, x1, y1, click) {
    this.prompt = prompt;
    this.x = x1;
    this.y = y1;
    this.click = click;
    this.w = 50;
    this.h = 20;
  }

  draw() {
    rect(this.x - this.w / 2, this.y - this.h / 2, this.w, this.h);
    return text(this.prompt, this.x, this.y);
  }

  inside(x, y) {
    return (this.x - this.w / 2 < x && x < this.x + this.w / 2) && (this.y - this.h / 2 < y && y < this.y + this.h / 2);
  }

};

Selector = class Selector {
  constructor(prompt, value, x1, y1, min1, max, delta1 = 1) {
    var d, self;
    this.prompt = prompt;
    this.value = value;
    this.x = x1;
    this.y = y1;
    this.min = min1;
    this.max = max;
    this.delta = delta1;
    self = this;
    this.buttons = [];
    d = 60;
    this.buttons.push(new Button('-1000', this.x - 4 * d, this.y, () => {
      return this.adjust(-1000);
    }));
    this.buttons.push(new Button('-100', this.x - 3 * d, this.y, () => {
      return this.adjust(-100);
    }));
    this.buttons.push(new Button('-10', this.x - 2 * d, this.y, () => {
      return this.adjust(-10);
    }));
    this.buttons.push(new Button(`-${this.delta}`, this.x - d, this.y, () => {
      return this.adjust(-this.delta);
    }));
    this.buttons.push(new Button(`+${this.delta}`, this.x + d, this.y, () => {
      return this.adjust(this.delta);
    }));
    this.buttons.push(new Button('+10', this.x + 2 * d, this.y, () => {
      return this.adjust(10);
    }));
    this.buttons.push(new Button('+100', this.x + 3 * d, this.y, () => {
      return this.adjust(100);
    }));
    this.buttons.push(new Button('+1000', this.x + 4 * d, this.y, () => {
      return this.adjust(1000);
    }));
  }

  adjust(delta) {
    var ref;
    if ((this.min <= (ref = this.value + delta) && ref <= this.max)) {
      return this.value += delta;
    }
  }

  draw() {
    var button, k, len, ref;
    ref = this.buttons;
    for (k = 0, len = ref.length; k < len; k++) {
      button = ref[k];
      button.draw();
    }
    push();
    if (this.prompt === 'i') {
      fill('red');
    }
    if (this.prompt === 'j') {
      fill(0, 128 + 64, 0);
    }
    text(`${this.prompt}:${this.value}`, this.x, this.y);
    return pop();
  }

};

setup = function() {
  createCanvas(600, 350);
  makeANCHORS(5);
  textAlign(CENTER, CENTER);
  nSel = new Selector('n', 3, width / 2, 30, 3, 100000, 2);
  iSel = new Selector('i', 0, width / 2, 60, 0, 100000 - 5, 1);
  return jSel = new Selector('j', 0, width / 2, 90, 0, 100000 - 5, 1);
};

draw = function() {
  var i, j, k, l, len, len1, len2, len3, len4, m, o, p, q, ref, ref1, ref2, ref3, ref4, selector, xOff;
  background(128);
  iSel.value = min(iSel.value, nSel.value - 5);
  jSel.value = min(jSel.value, nSel.value - 5);
  if (iSel.value < 0) {
    iSel.value = 0;
  }
  if (jSel.value < 0) {
    jSel.value = 0;
  }
  iSel.max = nSel.value - 5;
  jSel.max = nSel.value - 5;
  ref = [nSel, iSel, jSel];
  for (k = 0, len = ref.length; k < len; k++) {
    selector = ref[k];
    selector.draw();
  }
  makeANCHORS(nSel.value);
  m = min(5, n);
  xOff = width / 2 - 200;
  if (m === 3) {
    xOff = width / 2 - 100;
  }
  if (m === 4) {
    xOff = width / 2 - 150;
  }
  push();
  textSize(16);
  ref1 = range(m);
  for (l = 0, len1 = ref1.length; l < len1; l++) {
    i = ref1[l];
    ref2 = range(m);
    for (o = 0, len2 = ref2.length; o < len2; o++) {
      j = ref2[o];
      text(nr(iSel.value + i, jSel.value + j), xOff + 100 * i, 150 + 40 * j);
    }
  }
  push();
  fill('red');
  ref3 = range(m);
  for (p = 0, len3 = ref3.length; p < len3; p++) {
    i = ref3[p];
    text(iSel.value + i, xOff + 100 * i, 120);
  }
  fill(0, 128 + 64, 0);
  ref4 = range(m);
  for (q = 0, len4 = ref4.length; q < len4; q++) {
    j = ref4[q];
    text(jSel.value + j, 30, 150 + 40 * j);
  }
  pop();
  pop();
  text(`cells:${n * n}`, width * 0.33, height - 15);
  return text(`row/col/diag sum:${n * (1 + Math.floor(n * n / 2))}`, width * 0.67, height - 15);
};

mousePressed = function() {
  var button, k, len, ref, results, selector;
  ref = [nSel, iSel, jSel];
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    selector = ref[k];
    results.push((function() {
      var l, len1, ref1, results1;
      ref1 = selector.buttons;
      results1 = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        button = ref1[l];
        if (button.inside(mouseX, mouseY)) {
          results1.push(button.click());
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    })());
  }
  return results;
};

//### Tests ####
start = new Date();

ass([1, 0], _.minBy([[1, 0], [0, 1]], function([a, b]) {
  return b;
}));

ass(3, Math.floor(7 / 2));

ass(5, manhattan(3, 5, 1, 2));

makeANCHORS(5);

ass(23, nr(0, 0));

ass(6, nr(1, 0));

ass(10, nr(0, 1));

ass(25, nr(2, 3));

ass(16, nr(4, 3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(0));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(1));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(2));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(4));

makeANCHORS(7);

ass(5, x(2, 3));

ass(7, y(2, 3));

ass(22, even(0, 6));

ass(15, even(1, 7));

ass(46, nr(0, 0));

ass(15, nr(1, 0));

ass(21, nr(0, 1));

ass(7, nr(2, 3));

ass(4, nr(6, 6));

ass(48, nr(2, 5));

ass(43, nr(4, 3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(0));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(1));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(2));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(4));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(5));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(6));

makeANCHORS(9);

ass(77, nr(0, 0));

ass(28, nr(1, 0));

ass(36, nr(0, 1));

ass(18, nr(2, 3));

ass(23, nr(6, 6));

ass(8, nr(2, 5));

ass(1, nr(4, 3));

ass(369, n * (1 + Math.floor(n * n / 2)));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(0));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(1));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(2));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(4));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(5));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(6));

makeANCHORS(101);

ass(10151, nr(0, 0));

ass(4950, nr(1, 0));

ass(5050, nr(0, 1));

ass(4848, nr(2, 3));

ass(9545, nr(6, 6));

ass(4746, nr(2, 5));

ass(4647, nr(4, 3));

makeANCHORS(1001);

ass(1001501, nr(0, 0));

ass(499500, nr(1, 0));

ass(500500, nr(0, 1));

ass(498498, nr(2, 3));

ass(995495, nr(6, 6));

ass(497496, nr(2, 5));

ass(496497, nr(4, 3));

ass(501502001, n * (1 + Math.floor(n * n / 2)));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(0));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(1));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(2));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(4));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(5));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(6));

makeANCHORS(10001);

ass(100015001, nr(0, 0));

ass(49995000, nr(1, 0));

ass(50005000, nr(0, 1));

ass(49984998, nr(2, 3));

ass(99954995, nr(6, 6));

ass(49974996, nr(2, 5));

ass(49964997, nr(4, 3));

ass(500150020001, n * (1 + Math.floor(n * n / 2))); // row sum

ass(n * (1 + Math.floor(n * n / 2)), rowsum(0));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(1));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(2));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(4));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(5));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(6));

makeANCHORS(100001);

ass(10000200001, n * n); // cell count

ass(10000150001, nr(0, 0)); // cell

ass(4999950000, nr(1, 0));

ass(5000050000, nr(0, 1));

ass(4999849998, nr(2, 3));

ass(9999549995, nr(6, 6));

ass(4999749996, nr(2, 5));

ass(4999649997, nr(4, 3));

ass(500015000200001, n * (1 + Math.floor(n * n / 2))); // row sum, col sum, diag sum

ass(n * (1 + Math.floor(n * n / 2)), rowsum(0)); // row sum

ass(n * (1 + Math.floor(n * n / 2)), rowsum(1));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(2));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(3));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(4));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(5));

ass(n * (1 + Math.floor(n * n / 2)), rowsum(6));

console.log(new Date() - start);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2021\024-MagicSquares\coffee\sketch.coffee